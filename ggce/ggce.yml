--- # namespace
apiVersion: v1
kind: Namespace
metadata:
  name: ggce-ns
  labels:
    istio-injection: enabled

--- # configmap
apiVersion: v1
kind: ConfigMap
metadata:
  name: ggce-config
  namespace: ggce-ns
data:
  PORT: "8080"
  HOST: "0.0.0.0"
  GIN_MODE: "release"
  DB_HOST: "ggce-db.ggce-ns.svc.cluster.local"
  DB_NAME: "ggce"
  DB_USER: "ggce"
  DB_PASS: "ggce"
  DB_PORT: "5432"


# DB

--- # deployment
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ggce-db
  namespace: ggce-ns
spec:
  selector:
    matchLabels:
      app: ggce-db
  serviceName: ggce-db
  replicas: 1
  template:
    metadata:
      labels:
        app: ggce-db
    spec:
      containers:
      - name: ggce-db
        image: postgres
        ports:
          - containerPort: 5432
        env:
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: ggce-config
                key: DB_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: ggce-config
                key: DB_PASS
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: ggce-config
                key: DB_NAME

--- # service
apiVersion: v1
kind: Service
metadata:
  name: ggce-db
  namespace: ggce-ns
spec:
  selector:
    app: ggce-db
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP


# API

--- # deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ggce-api
  namespace: ggce-ns
spec:
  selector:
    matchLabels:
      app: ggce-api
  replicas: 2
  template:
    metadata:
      labels:
        app: ggce-api
    spec:
      containers:
      - name: ggce-api
        image: pdmm/ggce:15
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: ggce-config

--- # service
apiVersion: v1
kind: Service
metadata:
  name: ggce-api
  namespace: ggce-ns
spec:
  type: LoadBalancer
  selector:
    app: ggce-api
  ports:
    - port: 8888
      targetPort: 8080
      protocol: TCP

--- # virtual service
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: ggce-api-vs
  namespace: ggce-ns
spec:
  hosts:
  - "*"
  gateways:
  - ggce-gateway
  http:
  - match:
    - uri:
        prefix: /ggce/
    - uri:
        prefix: /ggce
    rewrite:
      uri: /
    route:
    - destination:
        port:
          number: 8888
        host: ggce-api

--- # ingress gateway
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ggce-gateway
  namespace: ggce-ns
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"